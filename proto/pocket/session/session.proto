syntax = "proto3";
package pocket.session;

option go_package = "pocket/x/session/types";

import "cosmos_proto/cosmos.proto";
import "pocket/service/service.proto";
import "pocket/application/application.proto";
import "pocket/supplier/supplier.proto";

// SessionHeader is a lightweight header for a session that can be passed around
// and from which the full Session object can be hydrated.
message SessionHeader {
    string session_id = 1; // A unique pseudoranom ID for this session
    uint64 session_number = 2; // The session number since genesis
    uint64 session_block_start_height = 3; // The height at which this session started
    uint64 num_blocks_per_session = 4;  // The number of blocks per session when this session started
    string application_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The address of the application this session is for
    service.ServiceId service_id = 6; // The ID of the service this session is for
}

// Session is a fully hydrated session object that contains all the information for the Session
// and its parcipants.
message Session {
    SessionHeader header = 1; // The header of the session containing lightweight data
    service.Service service = 2; // A fully hydrated service object this session is for
    application.Application application = 3; // A fully hydrated application object this session is for
    repeated supplier.Supplier suppliers = 4; // A fully hydrated set of servicers that are serving the application
}

// SessionHeader is a lightweight header for a session that can be passed around.
// It is the minimal amount of data required to hydrate & retrieve all data relevant to the session.
message SessionHeader2 {
    string application_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"]; // The address of the application this session is for
    service.ServiceId service_id = 2; // The ID of the service this session is servicing
    uint64 session_block_start_height = 3; // The height at which this session started
    // NOTE: session_id can be derived from the above values using on-chain but is included in the header for convenience
    string session_id = 4; // A unique pseudoranom ID for this session
}